alter table meal 
add column MEAL_ID INT auto_increment primary key;


alter table ingredient 
add column MEAL_ID INT references MEAL(MEAL_ID);


INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Grilled Chicken', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Bread', FALSE, TRUE, FALSE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Lettuce', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Tomato', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Mayo', TRUE, TRUE, FALSE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Lentils', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Onion', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Garlic', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Ginger', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Cumin', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Turmeric', FALSE, TRUE, TRUE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Pasta', FALSE, TRUE, FALSE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Pesto', TRUE, TRUE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Pine Nuts', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Basil', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Garlic', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Parmesan Cheese', TRUE, FALSE, FALSE, FALSE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Spaghetti', FALSE, TRUE, FALSE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Ground Beef', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Onion', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Garlic', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Tomato Sauce', FALSE, TRUE, TRUE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Steak', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Mashed Potatoes', FALSE, TRUE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Butter', TRUE, TRUE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Salt', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Pepper', FALSE, TRUE, TRUE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Sushi Rice', FALSE, TRUE, TRUE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Nori', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Tuna', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Salmon', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Avocado', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Wasabi', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Soy Sauce', FALSE, TRUE, TRUE, TRUE);


select M.NAME, I.NAME from  meal M
inner join ingredient I on I.MEAL_ID = M.MEAL_ID
where i.NAME = 'Garlic';


select count(m.NAME) from  meal M
inner join ingredient I on I.MEAL_ID = M.MEAL_ID
where i.VEGETARIAN;


select m.NAME from  meal M
inner join ingredient I on I.MEAL_ID = M.MEAL_ID
where i.GLUTEN_FREE and i.VEGAN
GROUP BY m.name


select AVG(numero_ingredienti) AS media_ingredienti_per_pasto
from (
    select M.MEAL_ID, COUNT(I.NAME) AS numero_ingredienti
    from MEAL M
    inner join INGREDIENT I ON I.MEAL_ID  = M.MEAL_ID
    GROUP BY M.MEAL_ID 
) AS ingredienti_per_pasto;


select M.NAME  from  meal M
inner join ingredient I on I.MEAL_ID = M.MEAL_ID
group by m.NAME
having count(i.NAME) > 3;

________________________________________________________________________________________________________

CREATE TABLE CUSTOMER (
    CUSTOMER_ID INT,
    NAME VARCHAR(255),
    ADDRESS VARCHAR(255)
);

alter table CUSTOMER
add column CUSTOMER_ID_increment primary key;

alter table product 
modify CUSTOMER_ID int AUTO_INCREMENT;


CREATE TABLE ORDER (
    ORDER_ID INT,
    CUSTOMER_ID INT,
    ORDER_DATE DATE,
    TOTAL_COST DECIMAL(10,2)
);

alter table ORDER
add foreign key (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID);


SELECT O.ORDER_ID, C.NAME, O.ORDER_DATE, O.TOTAL_COST
FROM CUSTOMER C
INNER JOIN "ORDER" O ON C.CUSTOMER_ID = O.CUSTOMER_ID;

________________________________________________________________________________________________________

CREATE TABLE PRODUCT (
    PRODUCT_ID INT,
    NAME VARCHAR(255),
    PRICE DECIMAL(10,2)
);

alter table PRODUCT
add column PRODUCT_ID_increment primary key;

alter table product 
modify PRODUCT_ID int AUTO_INCREMENT;

CREATE TABLE INVENTORY (
    PRODUCT_ID INT,
    STORE_ID INT,
    QUANTITY INT
);

alter table INVENTORY
add foreign key (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID);


SELECT P.NAME, P.PRICE, I.STORE_ID, I.QUANTITY
FROM PRODUCT P
INNER JOIN INVENTORY I ON P.PRODUCT_ID = I.PRODUCT_ID;

